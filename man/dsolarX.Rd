% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dsolar.R
\name{dsolarX}
\alias{dsolarX}
\alias{psolarX}
\alias{qsolarX}
\alias{rsolarX}
\title{Solar risk driver random variable}
\usage{
dsolarX(x, alpha, beta, pdf_Yt, log = FALSE)

psolarX(x, alpha, beta, pdf_Yt, log.p = FALSE, lower.tail = TRUE)

qsolarX(p, alpha, beta, pdf_Yt, log.p = FALSE, lower.tail = TRUE)

rsolarX(n, alpha, beta, pdf_Yt)
}
\arguments{
\item{x}{vector of quantiles.}

\item{alpha}{parameter `alpha > 0`.}

\item{beta}{parameter `beta > 0` and `alpha + beta < 1`.}

\item{pdf_Yt}{density of Yt.}

\item{log}{logical; if `TRUE`, probabilities are returned as `log(p)`.}

\item{log.p}{logical; if `TRUE`, probabilities p are given as `log(p)`.}

\item{lower.tail}{logical; if `TRUE`, the default, the computed probabilities are `P[X < x]`. Otherwise, `P[X > x]`.}

\item{p}{vector of probabilities.}
}
\description{
Solar risk driver density, distribution, quantile and random generator.
}
\details{
Consider a random variable \eqn{Y \in [-\infty, \infty]} with a known density function `pdf_Yt`. Then
the funtion `dsolarX` compute the density function of the following transformed random variable, i.e.
\deqn{X(Y) = \alpha+\beta \exp(-\exp(Y))}
where \eqn{X(Y) \in [\alpha, \alpha+\beta]}.
}
\examples{
# Density
dsolarX(0.4, 0.001, 0.9, function(x) dnorm(x))
dsolarX(0.4, 0.001, 0.9, function(x) dnorm(x, sd = 2))

# Distribution
psolarX(0.493, 0.001, 0.9, function(x) dnorm(x))
dsolarX(0.493, 0.001, 0.9, function(x) dnorm(x, sd = 2))

# Quantile
qsolarX(c(0.05, 0.95), 0.001, 0.9, function(x) dnorm(x))
qsolarX(c(0.05, 0.95), 0.001, 0.9, function(x) dnorm(x, sd = 1.3))

# Random generator (I)
Kt <- rsolarX(366, 0.001, 0.9, function(x) dnorm(x, sd = 0.8))
plot(1:366, Kt, type="l")

# Random generator (II)
pdf <- function(x) dmixnorm(x, c(-1.8, 0.9), c(0.5, 0.7), c(0.6, 0.4))
Kt <- rsolarX(366, 0.001, 0.9, pdf)
plot(1:366, Kt, type="l")
}
