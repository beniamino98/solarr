npoints <- 60
seq_1 <- seq(-6, 6, length.out = npoints)
seq_2 <- seq(0, 10, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~joint_pdf(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
joint_pdf <- function(x, y) dnorm(x, mean = 0.5)*((1/y)*dnorm(log(y), mean = -2, sd = 3))*p1*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_1) +
dnorm(x, mean = 0, sd = 3)*((1/y)*dnorm(log(y), mean = 2, sd = 0.3))*(1-p1)*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_2)
# Plot of the Joint PDF
npoints <- 60
seq_1 <- seq(-6, 6, length.out = npoints)
seq_2 <- seq(0, 10, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~joint_pdf(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
joint_pdf <- function(x, y) dnorm(x, mean = 0.5)*((1/y)*dnorm(log(y), mean = -2, sd = 0.1))*p1*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_1) +
dnorm(x, mean = 0, sd = 3)*((1/y)*dnorm(log(y), mean = 2, sd = 0.3))*(1-p1)*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_2)
# Plot of the Joint PDF
npoints <- 60
seq_1 <- seq(-6, 6, length.out = npoints)
seq_2 <- seq(0, 10, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~joint_pdf(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
joint_pdf <- function(x, y) dnorm(x, mean = 0.5)*((1/y)*dnorm(log(y), mean = -2, sd = 0.1))*p1*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_1) +
dnorm(x, mean = 0, sd = 3)*((1/y)*dnorm(log(y), mean = 2, sd = 0.2))*(1-p1)*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_2)
# Plot of the Joint PDF
npoints <- 60
seq_1 <- seq(-6, 6, length.out = npoints)
seq_2 <- seq(0, 10, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~joint_pdf(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
joint_pdf <- function(x, y) dnorm(x, mean = 0.5)*((1/y)*dnorm(log(y), mean = 0, sd = 0.1))*p1*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_1) +
dnorm(x, mean = 0, sd = 3)*((1/y)*dnorm(log(y), mean = 0, sd = 0.2))*(1-p1)*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_2)
# Plot of the Joint PDF
npoints <- 60
seq_1 <- seq(-6, 6, length.out = npoints)
seq_2 <- seq(0, 10, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~joint_pdf(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
joint_pdf <- function(x, y) dnorm(x, mean = 0, sd = 1)*((1/y)*dnorm(log(y), mean = 0, sd = 1))*p1*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_1) +
dnorm(x, mean = 0, sd = 1)*((1/y)*dnorm(log(y), mean = 0, sd = 1))*(1-p1)*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_2)
# Plot of the Joint PDF
npoints <- 60
seq_1 <- seq(-6, 6, length.out = npoints)
seq_2 <- seq(0, 10, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~joint_pdf(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
p1
joint_pdf <- function(x, y) dnorm(x, mean = 0, sd = 1)*((1/y)*dnorm(log(y), mean = 0, sd = 1))*p1*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_1) +
dnorm(x, mean = 0, sd = 1)*((1/y)*dnorm(log(y), mean = 3, sd = 1))*(1-p1)*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_2)
# Plot of the Joint PDF
npoints <- 60
seq_1 <- seq(-6, 6, length.out = npoints)
seq_2 <- seq(0, 10, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~joint_pdf(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
joint_pdf <- function(x, y) dnorm(x, mean = 0, sd = 1)*((1/y)*dnorm(log(y), mean = 0, sd = 1))*p1*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_1) +
dnorm(x, mean = 3, sd = 1)*((1/y)*dnorm(log(y), mean = 3, sd = 1))*(1-p1)*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_2)
# Plot of the Joint PDF
npoints <- 60
seq_1 <- seq(-6, 6, length.out = npoints)
seq_2 <- seq(0, 10, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~joint_pdf(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
joint_pdf <- function(x, y) dnorm(x, mean = 0, sd = 1)*((1/y)*dnorm(log(y), mean = 0, sd = 1))*p1*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_1) +
dnorm(x, mean = 0, sd = 1)*((1/y)*dnorm(log(y), mean = 0, sd = 1))*(1-p1)*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_2)
# Plot of the Joint PDF
npoints <- 60
seq_1 <- seq(-6, 6, length.out = npoints)
seq_2 <- seq(0, 10, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~joint_pdf(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
joint_pdf <- function(x, y) dnorm(x, mean = 0, sd = 1)*((1/y)*dnorm(log(y), mean = 0, sd = 1))*p1*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_1) +
dnorm(x, mean = 0, sd = 1)*((1/y)*dnorm(log(y), mean = 0, sd = 0.1))*(1-p1)*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_2)
# Plot of the Joint PDF
npoints <- 60
seq_1 <- seq(-6, 6, length.out = npoints)
seq_2 <- seq(0, 10, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~joint_pdf(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
joint_pdf <- function(x, y) dnorm(x, mean = 0, sd = 1)*((1/y)*dnorm(log(y), mean = 0, sd = 1))*p1*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_1) +
dnorm(x, mean = 0, sd = 1)*((1/y)*dnorm(log(y), mean = 0, sd = 4))*(1-p1)*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_2)
# Plot of the Joint PDF
npoints <- 60
seq_1 <- seq(-6, 6, length.out = npoints)
seq_2 <- seq(0, 10, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~joint_pdf(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
joint_pdf <- function(x, y) dnorm(x, mean = 0, sd = 1)*((1/y)*dnorm(log(y), mean = 0, sd = 4))*p1*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_1) +
dnorm(x, mean = 0, sd = 1)*((1/y)*dnorm(log(y), mean = 0, sd = 4))*(1-p1)*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_2)
# Plot of the Joint PDF
npoints <- 60
seq_1 <- seq(-6, 6, length.out = npoints)
seq_2 <- seq(0, 10, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~joint_pdf(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
joint_pdf <- function(x, y) dnorm(x, mean = 0, sd = 1)*((1/y)*dnorm(log(y), mean = 0, sd = 2))*p1*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_1) +
dnorm(x, mean = 0, sd = 1)*((1/y)*dnorm(log(y), mean = 0, sd = 4))*(1-p1)*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_2)
# Plot of the Joint PDF
npoints <- 60
seq_1 <- seq(-6, 6, length.out = npoints)
seq_2 <- seq(0, 10, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~joint_pdf(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
joint_pdf <- function(x, y) dnorm(x, mean = 0, sd = 1)*((1/y)*dnorm(log(y), mean = 5, sd = 2))*p1*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_1) +
dnorm(x, mean = 0, sd = 1)*((1/y)*dnorm(log(y), mean = 0, sd = 4))*(1-p1)*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_2)
# Plot of the Joint PDF
npoints <- 60
seq_1 <- seq(-6, 6, length.out = npoints)
seq_2 <- seq(0, 10, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~joint_pdf(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
joint_pdf <- function(x, y) dnorm(x, mean = 0, sd = 1)*((1/y)*dnorm(log(y), mean = 0, sd = 1))*p1*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_1) +
dnorm(x, mean = 0, sd = 1)*((1/y)*dnorm(log(y), mean = 0, sd = 1))*(1-p1)*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_2)
# Plot of the Joint PDF
npoints <- 60
seq_1 <- seq(-6, 6, length.out = npoints)
seq_2 <- seq(0, 3, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~joint_pdf(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
seq_2 <- seq(0, 5, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~joint_pdf(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
joint_pdf <- function(x, y) dnorm(x, mean = -2, sd = 1)*((1/y)*dnorm(log(y), mean = 0, sd = 1))*p1*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_1) +
dnorm(x, mean = 2, sd = 1)*((1/y)*dnorm(log(y), mean = 0, sd = 1))*(1-p1)*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_2)
# Plot of the Joint PDF
npoints <- 60
seq_1 <- seq(-6, 6, length.out = npoints)
seq_2 <- seq(0, 5, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~joint_pdf(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
joint_pdf <- function(x, y) dnorm(x, mean = -1, sd = 3)*((1/y)*dnorm(log(y), mean = 0, sd = 1))*p1*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_1) +
dnorm(x, mean = 1, sd = 2)*((1/y)*dnorm(log(y), mean = 0, sd = 1))*(1-p1)*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_2)
# Plot of the Joint PDF
npoints <- 60
seq_1 <- seq(-6, 6, length.out = npoints)
seq_2 <- seq(0, 5, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~joint_pdf(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
joint_pdf <- function(x, y) dnorm(x, mean = -1, sd = 0.4)*((1/y)*dnorm(log(y), mean = 0, sd = 1))*p1*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_1) +
dnorm(x, mean = 1, sd = 1)*((1/y)*dnorm(log(y), mean = 0, sd = 1))*(1-p1)*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_2)
# Plot of the Joint PDF
npoints <- 60
seq_1 <- seq(-6, 6, length.out = npoints)
seq_2 <- seq(0, 5, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~joint_pdf(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
joint_pdf <- function(x, y) dnorm(x, mean = -0.5, sd = 0.4)*((1/y)*dnorm(log(y), mean = 0, sd = 1))*p1*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_1) +
dnorm(x, mean = 0.4, sd = 1)*((1/y)*dnorm(log(y), mean = 0, sd = 1))*(1-p1)*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_2)
# Plot of the Joint PDF
npoints <- 60
seq_1 <- seq(-6, 6, length.out = npoints)
seq_2 <- seq(0, 5, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~joint_pdf(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
seq_1 <- seq(-3, 3, length.out = npoints)
seq_2 <- seq(0, 5, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~joint_pdf(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
seq_2 <- seq(0, 4, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~joint_pdf(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
joint_pdf <- function(x, y) dnorm(x, mean = -0.5, sd = 1.4)*((1/y)*dnorm(log(y), mean = 0, sd = 1))*p1*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_1) +
dnorm(x, mean = 0.4, sd = 1)*((1/y)*dnorm(log(y), mean = 0, sd = 1))*(1-p1)*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_2)
# Plot of the Joint PDF
npoints <- 60
seq_1 <- seq(-3, 3, length.out = npoints)
seq_2 <- seq(0, 4, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~joint_pdf(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
seq_1 <- seq(-4, 4, length.out = npoints)
seq_2 <- seq(0, 4, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~joint_pdf(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
joint_pdf <- function(x, y) dnorm(x, mean = -0.5, sd = 1.3)*((1/y)*dnorm(log(y), mean = 0, sd = 1))*p1*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_1) +
dnorm(x, mean = 0.4, sd = 0.5)*((1/y)*dnorm(log(y), mean = 0, sd = 1))*(1-p1)*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_2)
# Plot of the Joint PDF
npoints <- 60
seq_1 <- seq(-4, 4, length.out = npoints)
seq_2 <- seq(0, 4, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~joint_pdf(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
nmonth <- 1
theta <- list()
for(nmonth in 1:12){
# Filter for a specific month
data_cop_1_m <- filter(data_cop_1, Month == nmonth)
data_cop_2_m <- filter(data_cop_2, Month == nmonth)
# Grades under normality
u1_m <- apply(select(data_cop_1_m, eps, z1), 2, pnorm)
u2_m <- apply(select(data_cop_2_m, eps, z2), 2, pnorm)
# Fitted copulas
cop_1_fit <- copula::fitCopula(normalCopula(dim = 2, dispstr = "un"), u1_m, method = "ml")
cop_2_fit <- copula::fitCopula(normalCopula(dim = 2, dispstr = "un"), u2_m, method = "ml")
# Fitted copula parameters
theta[[nmonth]] <- c(theta1 = cop_1_fit@estimate, theta2 = cop_2_fit@estimate)
}
theta
names(theta) <- lubridate::month(1:12, label = TRUE)
theta
bind_rows(theta)
bind_rows(theta) %>%
ggplot()+
geom_line(aes(1:12, theta1))
bind_rows(theta) %>%
ggplot()+
geom_line(aes(1:12, theta1))+
geom_line(aes(1:12, theta2))
bind_rows(theta) %>%
ggplot()+
geom_line(aes(1:12, theta1))+
geom_line(aes(1:12, theta2), color = "red")
nmonth <- 1
theta <- list()
for(nmonth in 1:12){
# Filter for a specific month
data_cop_1_m <- filter(data_cop_1, Month == nmonth)
data_cop_2_m <- filter(data_cop_2, Month == nmonth)
# Grades under normality
u1_m <- apply(select(data_cop_1_m, eps, z1), 2, pnorm)
u2_m <- apply(select(data_cop_2_m, eps, z2), 2, pnorm)
# Fitted copulas
cop_1_fit <- copula::fitCopula(normalCopula(dim = 2, dispstr = "un"), u1_m, method = "ml")
cop_2_fit <- copula::fitCopula(normalCopula(dim = 2, dispstr = "un"), u2_m, method = "ml")
# Fitted copula parameters
theta[[nmonth]] <- c(theta1 = cop_1_fit@estimate, theta2 = cop_2_fit@estimate)
}
bind_rows(theta)
theta <- bind_cols(Month = 1:12, bind_rows(theta))
theta[1,]$theta1
mixCop
# Specify the two copulas
p1 <- filter(data_cop_1, Month == 1)$p1[1]
p1
# Specify the two copulas
nmonth <- 1
p1 <- filter(data_cop_1, Month == nmonth)$p1[1]
cop_1 <- normalCopula(param = theta[nmonth,]$theta1, dim = 2)
cop_2 <- normalCopula(param = theta[nmonth,]$theta2, dim = 2)
# Mixture copula
mixCop <- function(x, y) p1*dCopula(c(pnorm(x), pnorm(y)), copula = cop_1) + (1-p1)*dCopula(c(pnorm(x), pnorm(y)), copula = cop_2)
# Plot of the Joint PDF
npoints <- 60
seq_1 <- seq(-3, 3, length.out = npoints)
seq_2 <- seq(-3, 3, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~mixCop(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
# Specify the two copulas
nmonth <- 4
p1 <- filter(data_cop_1, Month == nmonth)$p1[1]
cop_1 <- normalCopula(param = theta[nmonth,]$theta1, dim = 2)
cop_2 <- normalCopula(param = theta[nmonth,]$theta2, dim = 2)
# Mixture copula
mixCop <- function(x, y) p1*dCopula(c(pnorm(x), pnorm(y)), copula = cop_1) + (1-p1)*dCopula(c(pnorm(x), pnorm(y)), copula = cop_2)
# Plot of the Joint PDF
npoints <- 60
seq_1 <- seq(-3, 3, length.out = npoints)
seq_2 <- seq(-3, 3, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~mixCop(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
# Specify the two copulas
nmonth <- 6
p1 <- filter(data_cop_1, Month == nmonth)$p1[1]
cop_1 <- normalCopula(param = theta[nmonth,]$theta1, dim = 2)
cop_2 <- normalCopula(param = theta[nmonth,]$theta2, dim = 2)
# Mixture copula
mixCop <- function(x, y) p1*dCopula(c(pnorm(x), pnorm(y)), copula = cop_1) + (1-p1)*dCopula(c(pnorm(x), pnorm(y)), copula = cop_2)
# Plot of the Joint PDF
npoints <- 60
seq_1 <- seq(-3, 3, length.out = npoints)
seq_2 <- seq(-3, 3, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~mixCop(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
# Specify the two copulas
nmonth <- 12
p1 <- filter(data_cop_1, Month == nmonth)$p1[1]
cop_1 <- normalCopula(param = theta[nmonth,]$theta1, dim = 2)
cop_2 <- normalCopula(param = theta[nmonth,]$theta2, dim = 2)
# Mixture copula
mixCop <- function(x, y) p1*dCopula(c(pnorm(x), pnorm(y)), copula = cop_1) + (1-p1)*dCopula(c(pnorm(x), pnorm(y)), copula = cop_2)
# Plot of the Joint PDF
npoints <- 60
seq_1 <- seq(-3, 3, length.out = npoints)
seq_2 <- seq(-3, 3, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~mixCop(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
# Specify the two copulas
nmonth <- 9
p1 <- filter(data_cop_1, Month == nmonth)$p1[1]
cop_1 <- normalCopula(param = theta[nmonth,]$theta1, dim = 2)
cop_2 <- normalCopula(param = theta[nmonth,]$theta2, dim = 2)
# Mixture copula
mixCop <- function(x, y) p1*dCopula(c(pnorm(x), pnorm(y)), copula = cop_1) + (1-p1)*dCopula(c(pnorm(x), pnorm(y)), copula = cop_2)
# Plot of the Joint PDF
npoints <- 60
seq_1 <- seq(-3, 3, length.out = npoints)
seq_2 <- seq(-3, 3, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~mixCop(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
theta
# Test integral
#cubature::hcubature(function(x) joint_pdf(x[1],x[2]), maxEval = 20000,
#                    lowerLimit = c(-Inf, 0), upperLimit = c(Inf, Inf))
# Plot of the Joint PDF
npoints <- 60
seq_1 <- seq(-4, 4, length.out = npoints)
seq_2 <- seq(0, 4, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~joint_pdf(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
# Specify a joint pdf
joint_pdf <- function(x, y) dnorm(x, mean = -1.5, sd = 1.3)*((1/y)*dnorm(log(y), mean = 0, sd = 1))*p1*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_1) +
dnorm(x, mean = 1.4, sd = 0.5)*((1/y)*dnorm(log(y), mean = 0, sd = 1))*(1-p1)*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_2)
# Test integral
#cubature::hcubature(function(x) joint_pdf(x[1],x[2]), maxEval = 20000,
#                    lowerLimit = c(-Inf, 0), upperLimit = c(Inf, Inf))
# Plot of the Joint PDF
npoints <- 60
seq_1 <- seq(-4, 4, length.out = npoints)
seq_2 <- seq(0, 4, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~joint_pdf(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
p1
# Specify a joint pdf
joint_pdf <- function(x, y) dnorm(x, mean = -1.5, sd = 1.3)*((1/y)*dnorm(log(y), mean = 0, sd = 1))*0.5*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_1) +
dnorm(x, mean = 1.4, sd = 0.5)*((1/y)*dnorm(log(y), mean = 0, sd = 1))*(1-0.5)*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_2)
# Test integral
#cubature::hcubature(function(x) joint_pdf(x[1],x[2]), maxEval = 20000,
#                    lowerLimit = c(-Inf, 0), upperLimit = c(Inf, Inf))
# Plot of the Joint PDF
npoints <- 60
seq_1 <- seq(-4, 4, length.out = npoints)
seq_2 <- seq(0, 4, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~joint_pdf(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
# Specify a joint pdf
joint_pdf <- function(x, y) dnorm(x, mean = -1.2, sd = 1.3)*((1/y)*dnorm(log(y), mean = 0, sd = 1))*0.5*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_1) +
dnorm(x, mean = 1.2, sd = 0.5)*((1/y)*dnorm(log(y), mean = 0, sd = 1))*(1-0.5)*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_2)
# Test integral
#cubature::hcubature(function(x) joint_pdf(x[1],x[2]), maxEval = 20000,
#                    lowerLimit = c(-Inf, 0), upperLimit = c(Inf, Inf))
# Plot of the Joint PDF
npoints <- 60
seq_1 <- seq(-4, 4, length.out = npoints)
seq_2 <- seq(0, 4, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~joint_pdf(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
# Specify a joint pdf
joint_pdf <- function(x, y) dnorm(x, mean = -1, sd = 1.3)*((1/y)*dnorm(log(y), mean = 0, sd = 1))*0.5*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_1) +
dnorm(x, mean = 1, sd = 1)*((1/y)*dnorm(log(y), mean = 0, sd = 1))*(1-0.5)*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_2)
# Test integral
#cubature::hcubature(function(x) joint_pdf(x[1],x[2]), maxEval = 20000,
#                    lowerLimit = c(-Inf, 0), upperLimit = c(Inf, Inf))
# Plot of the Joint PDF
npoints <- 60
seq_1 <- seq(-4, 4, length.out = npoints)
seq_2 <- seq(0, 4, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~joint_pdf(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
# Specify a joint pdf
joint_pdf <- function(x, y) dnorm(x, mean = -1, sd = 1.3)*((1/y)*dnorm(log(y), mean = 0, sd = 1))*0.5*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_1) +
dnorm(x, mean = 1, sd = 0.8)*((1/y)*dnorm(log(y), mean = 0, sd = 1))*(1-0.5)*dCopula(c(pnorm(x), pnorm(log(y))), copula = cop_2)
# Test integral
#cubature::hcubature(function(x) joint_pdf(x[1],x[2]), maxEval = 20000,
#                    lowerLimit = c(-Inf, 0), upperLimit = c(Inf, Inf))
# Plot of the Joint PDF
npoints <- 60
seq_1 <- seq(-4, 4, length.out = npoints)
seq_2 <- seq(0, 4, length.out = npoints)
# Plot of the Joint Copula
joint_cop <- matrix(0, nrow = npoints, ncol = npoints)
for(i in 1:npoints){
joint_cop[i,] <- map_dbl(seq_1, ~joint_pdf(.x, seq_2[i]))
}
plotly::plot_ly(x = seq_1, y = seq_2, z = joint_cop, type = "surface")
